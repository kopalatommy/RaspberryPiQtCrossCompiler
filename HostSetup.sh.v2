#DEVICE=linux-rasp-pi4-v3d-g++
DEVICE=linux-rasp-pi3-g++
IP=192.168.1.128
CORES=$(nproc)
DIRECTORY=~/RaspberryQt
COMPILER_PATH=/opt/RaspCompiler
QT_VER=5.15
QT_SUB_VER=${QT_VER}.2

Red="\033[0;31m"
Green="\033[0;32m"
Reset="\033[0m"
Yellow="\033[0;33m"
Cyan="\033[0;36m"

echo -e ${Yellow}"Setting up pi..."${Reset}
scp RaspSetup.sh pi@${IP}:~/
ssh pi@${IP} "/home/pi/RaspSetup.sh"

echo -e ${Yellow}"Install packages..."${Reset}
sudo apt-get update
sudo apt-get -y install gcc git bison python gperf pkg-config gdb-multiarch qt5-default

echo -e ${Yellow}"Create directories..."${Reset}
if [[ ! -d ~/CrossCompilers ]]
then
mkdir -p ~/CrossCompilers
fi
if [[ ! -d ~/CrossCompilers/${DEVICE} ]]
then
mkdir -p ~/CrossCompilers/${DEVICE}
fi
if [[ ! -d ~/CrossCompilers/${DEVICE}/${QT_SUB_VER} ]]
then
mkdir -p ~/CrossCompilers/${DEVICE}/${QT_SUB_VER}
fi
mkdir -p ${DIRECTORY}/log ${DIRECTORY}/build
sudo mkdir -p ${COMPILER_PATH}
mkdir -p ${DIRECTORY}/sysroot ${DIRECTORY}/sysroot/usr ${DIRECTORY}/sysroot/opt

cd ${DIRECTORY}
sudo chown -R 1000:1000 ${DIRECTORY}
sudo chown -R 1000:1000 ${COMPILER_PATH}

if [[ ! -f ~/.ssh/rpi_pi_id_rsa ]]
then
	echo -e ${Yellow}"Generate SSH keys..."${Reset}
	ssh-keygen -t rsa -C pi@${IP} -P "" -f ~/.ssh/rpi_pi_id_rsa
else
	echo -e ${Yellow}"Adding SSH key to pi..."${Reset}
	ssh-copy-id pi@${IP}
fi
cat ~/.ssh/rpi_pi_id_rsa.pub | ssh pi@${IP} 'cat >> .ssh/authorized_keys && chmod 640 .ssh/authorized_keys'

echo -e ${Yellow}"Download toolchain..."${Reset}
cd ${COMPILER_PATH}
git clone https://github.com/raspberrypi/tools

echo -e ${Yellow}"Download Qt..."${Reset}
cd ${DIRECTORY}
wget https://download.qt.io/archive/qt/${QT_VER}/${QT_SUB_VER}/single/qt-everywhere-src-${QT_SUB_VER}.tar.xz

echo -e ${Yellow}"Download Python script..."${Reset}
wget https://raw.githubusercontent.com/riscv/riscv-poky/master/scripts/sysroot-relativelinks.py
sudo chmod +x sysroot-relativelinks.py

tar xf qt-everywhere-src-${QT_SUB_VER}.tar.xz
cp -R qt-everywhere-src-${QT_SUB_VER}/qtbase/mkspecs/linux-arm-gnueabi-g++ qt-everywhere-src-${QT_SUB_VER}/qtbase/mkspecs/linux-arm-gnueabihf-g++
sed -i -e 's/arm-linux-gnueabi-/arm-linux-gnueabihf-/g' qt-everywhere-src-${QT_SUB_VER}/qtbase/mkspecs/linux-arm-gnueabihf-g++/qmake.conf

cd ${DIRECTORY}
echo -e ${Yellow}"Download /lib..."${Reset}
rsync -avz --rsync-path="sudo rsync" pi@${IP}:/lib sysroot | tee ${DIRECTORY}/log/copy_lib.log
echo -e ${Yellow}"Download /usr/include..."${Reset}
rsync -avz --rsync-path="sudo rsync" pi@${IP}:/usr/include sysroot/usr | tee ${DIRECTORY}/log/copy_usr_include.log
echo -e ${Yellow}"Download /usr/lib..."${Reset}
rsync -avz --rsync-path="sudo rsync" pi@${IP}:/usr/lib sysroot/usr | tee ${DIRECTORY}/log/copy_usr_lib.log
echo -e ${Yellow}"Download /opt/vc..."${Reset}
rsync -avz --rsync-path="sudo rsync" pi@${IP}:/opt/vc sysroot/opt | tee ${DIRECTORY}/log/copy_opt_vc.log

echo -e ${Yellow}"Change symlinks..."${Reset}
${DIRECTORY}/sysroot-relativelinks.py sysroot
# ToDo, add unlinking method
ln -s sysroot/opt/vc/lib/libEGL.so sysroot/usr/lib/arm-linux-gnueabihf/libEGL.so.1.0.0
ln -s sysroot/opt/vc/lib/libGLESv2.so sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.0.0
ln -s sysroot/opt/vc/lib/libEGL.so sysroot/opt/vc/lib/libEGL.so.1
ln -s sysroot/opt/vc/lib/libGLESv2.so sysroot/opt/vc/lib/libGLESv2.so.2

echo -e ${Yellow}"Configure Qt..."${Reset}
cd ${DIRECTORY}/build
../qt-everywhere-src-${QT_SUB_VER}/configure -opengl es2 -eglfs -device ${DEVICE} -device-option CROSS_COMPILE=${COMPILER_PATH}/bin/arm-linux-gnueabihf-  -sysroot ${COMPILER_PATH}/sysroot -prefix /usr/local/RaspberryQt -extprefix ~/CrossCompilers/${DEVICE}/${QT_SUB_VER} -opensource -confirm-license -no-gbm -skip qtscript -nomake tests -nomake examples -make libs -pkg-config -no-use-gold-linker -v | tee ${DIRECTORY}/log/config.log

#echo -e ${Yellow}"Build Qt..."${Reset}
#make -j${CORES} | tee ${DIRECTORY}/log/make.log
#make install | tee ${DIRECTORY}/log/install.log

#echo -e ${Yellow}"Clean..."${Reset}
#sudo rm -r ${DIRECTORY}/build
#sudo rm -r ${DIRECTORY}/sysroot-relativelinks.py
#sudo rm -r ${DIRECTORY}/qt-everywhere-src-${QT_SUB_VER}
#sudo rm ${DIRECTORY}/qt-everywhere-src-${QT_SUB_VER}.tar.xz

#echo -e ${Yellow}"Upload to Raspberry Pi..."${Reset}
#cd ${DIRECTORY}
#rsync -avz ${COMPILER_PATH}/sysroot/usr/local/RaspberryQt pi@${IP}:/usr/local | tee ${DIRECTORY}/log/copy_RaspberryQt.log
